// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mempb.proto

package mempb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetRequest struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9a3c92f9a25feb5, []int{0}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type GetResponse struct {
	RequestedKey         string   `protobuf:"bytes,1,opt,name=requested_key,json=requestedKey,proto3" json:"requested_key,omitempty"`
	Exists               bool     `protobuf:"varint,3,opt,name=exists,proto3" json:"exists,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetResponse) Reset()         { *m = GetResponse{} }
func (m *GetResponse) String() string { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()    {}
func (*GetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9a3c92f9a25feb5, []int{1}
}

func (m *GetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResponse.Unmarshal(m, b)
}
func (m *GetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResponse.Marshal(b, m, deterministic)
}
func (m *GetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResponse.Merge(m, src)
}
func (m *GetResponse) XXX_Size() int {
	return xxx_messageInfo_GetResponse.Size(m)
}
func (m *GetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetResponse proto.InternalMessageInfo

func (m *GetResponse) GetRequestedKey() string {
	if m != nil {
		return m.RequestedKey
	}
	return ""
}

func (m *GetResponse) GetExists() bool {
	if m != nil {
		return m.Exists
	}
	return false
}

func (m *GetResponse) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*GetRequest)(nil), "mempb.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "mempb.GetResponse")
}

func init() { proto.RegisterFile("mempb.proto", fileDescriptor_f9a3c92f9a25feb5) }

var fileDescriptor_f9a3c92f9a25feb5 = []byte{
	// 173 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xce, 0x4d, 0xcd, 0x2d,
	0x48, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x73, 0x94, 0xe4, 0xb8, 0xb8, 0xdc,
	0x53, 0x4b, 0x82, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x04, 0xb8, 0x98, 0xb3, 0x53, 0x2b,
	0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0x40, 0x4c, 0xa5, 0x04, 0x2e, 0x6e, 0xb0, 0x7c, 0x71,
	0x41, 0x7e, 0x5e, 0x71, 0xaa, 0x90, 0x32, 0x17, 0x6f, 0x11, 0x44, 0x6d, 0x6a, 0x4a, 0x3c, 0x42,
	0x29, 0x0f, 0x5c, 0xd0, 0x3b, 0xb5, 0x52, 0x48, 0x8c, 0x8b, 0x2d, 0xb5, 0x22, 0xb3, 0xb8, 0xa4,
	0x58, 0x82, 0x59, 0x81, 0x51, 0x83, 0x23, 0x08, 0xca, 0x13, 0x12, 0xe1, 0x62, 0x2d, 0x4b, 0xcc,
	0x29, 0x4d, 0x95, 0x60, 0x02, 0x6b, 0x82, 0x70, 0x8c, 0x2c, 0xb9, 0x38, 0x7d, 0x53, 0x73, 0x83,
	0x53, 0x8b, 0xca, 0x52, 0x8b, 0x84, 0x74, 0xb8, 0x98, 0xdd, 0x53, 0x4b, 0x84, 0x04, 0xf5, 0x20,
	0x4e, 0x45, 0x38, 0x4d, 0x4a, 0x08, 0x59, 0x08, 0xe2, 0x9a, 0x24, 0x36, 0xb0, 0x57, 0x8c, 0x01,
	0x01, 0x00, 0x00, 0xff, 0xff, 0xa3, 0x35, 0x54, 0x93, 0xd9, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MemServerClient is the client API for MemServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MemServerClient interface {
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
}

type memServerClient struct {
	cc *grpc.ClientConn
}

func NewMemServerClient(cc *grpc.ClientConn) MemServerClient {
	return &memServerClient{cc}
}

func (c *memServerClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/mempb.MemServer/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MemServerServer is the server API for MemServer service.
type MemServerServer interface {
	Get(context.Context, *GetRequest) (*GetResponse, error)
}

func RegisterMemServerServer(s *grpc.Server, srv MemServerServer) {
	s.RegisterService(&_MemServer_serviceDesc, srv)
}

func _MemServer_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemServerServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mempb.MemServer/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemServerServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MemServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mempb.MemServer",
	HandlerType: (*MemServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _MemServer_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mempb.proto",
}
